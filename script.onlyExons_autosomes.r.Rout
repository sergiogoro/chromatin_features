
R version 2.15.2 (2012-10-26) -- "Trick or Treat"
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #
> # EXONS
> #
> # Dos datasets:
> #   A) EXON.SHORTINTRONS.n
> #   #B) GENE.SHORTINTRONS.n
> #
> # Filtros:
> #   A) Exones
> #       A.1)
> #           Erep <-(data[["num_FBtrs"]]/data[["FBtrs_per_gene"]]) # Exones donde anotaciones 5.49 y 5.50 son distintos!!    #Solo para data exon.shortintrons.n
> #           data <- subset(data,Erep <= 1)
> #       A.2)
> #           data <- na.omit(data) #para el modelo mixto
> #
> 
> library(car)
> library(lattice)
> library(ppcor)
> 
> rm(list = ls())
> setwd("/home/sergio/chromatin/analysis/R/chromatin_features/")
> 
> # Load datasets
> data<-read.table(file="EXON.SHORTINTRONS.n",header=TRUE,sep="\t")
> 
> #nrow(data)
> data <- subset(data, chromosome != "X")                     #AUTOSOMES
> Erep <- ( data[["num_FBtrs"]] / data[["FBtrs_per_gene"]] )  # Exones donde anotaciones 5.49 y 5.50 son distintos!!    #Solo para data exon.shortintrons.n
> data <- subset(data,Erep <= 1)                              #Filtramos los que num_FBtrs/FBtrs_per_gene sean mayores que 1 (Casos que ocurren x usar rev5.49 y rev5.50)
> 
> ### PopGen Summary Statistics ###
> 
> data <- na.omit(data) #para el modelo mixto
> 
> pi4f    <- data[["pi_4f"]] / data[["mdmel_4f"]]
> pi0f    <- data[["pi_0f"]] / data[["mdmel_0f"]]
> piins   <- data[["pi_ins"]] / data[["mdmel_ins"]]
> t4f     <- data[["seg_4f"]] / data[["mdmel_4f"]]
> t0f     <- data[["seg_0f"]] / data[["mdmel_0f"]]
> tins    <- data[["seg_ins"]] / data[["mdmel_ins"]]
> k4f     <- ( data[["div_4f"]] +1 ) / ( data[["mdyak_4f"]] +1 )
> k0f     <- ( data[["div_0f"]] +1 ) / ( data[["mdyak_0f"]] +1 )
> kins    <- ( ( data$div_ins +1 ) / ( data[["mdyak_ins"]] +1 ) )
> 
> constraint_4f   <- t0f/t4f
> constraint_ins  <- t0f/tins
> omega_4f        <- ( k0f / k4f )            #Para boxplots
> omega_ins       <- ( k0f / kins )           #Para boxplots
> m               <- data[["mdmel_0f"]] + data[["mdmel_4f"]] + data[["mdmel_2f"]]
> 
> 
> ### Summary ###
> 
> ### EXON ###
> 
>     #Feature 1
> 	### Transcripts (mRNAs per exon) ###
> 	    cat( with( data, tapply( m, num_FBtrs, sum ) ), file = "OUT_Exons-autosomes" )
> 		num_FBtrs_factor = cut( data[["num_FBtrs"]], c(0, 1, 2, 75) )
> 		
>         png( "EXONS-autosomes_omega4f-numFBtrs.png", width=1920, height=1080)
> 		boxplot( omega_4f~num_FBtrs_factor, outline=F, xlab="Number of Transcripts/Exon", ylab="Ka/Ks", main="Omega 4f" )
> 		abline( h = median( omega_4f ), col="black" )
>         dev.off()
null device 
          1 
>         png( "EXONS-autosomes_omegains-numFBtrs.png", width=1920, height=1080 )
> 		boxplot( omega_ins ~ num_FBtrs_factor, outline=F, xlab="Number of Transcripts/Exon", ylab="Ka/Kins", main="Omega intrones pequeÃ±os" )
>         abline( h = median( omega_ins ), col="black" )
>         dev.off()
null device 
          1 
> 
>         #cor.test(omega_4f, data$num_FBtrs_factor, method="spearman")
>         write.table( cor.test(omega_4f, data$num_FBtrs_factor, method="spearman")[3], file = "OUT_Exons-autosomes", quote=T, row.names=F )
Error in cor.test.default(omega_4f, data$num_FBtrs_factor, method = "spearman") : 
  'x' and 'y' must have the same length
Calls: write.table -> is.data.frame -> cor.test -> cor.test.default
Execution halted
